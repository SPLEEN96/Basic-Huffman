#include "DataIO.h"
#include "HuffmanCoding.h"
#include "Tree.h"

/*
-DELETE TREE
-TREE IN FILE
-JPG
*/

using namespace std;

int main() {
  std::string buffer;
  std::string encoded, decoded;
  Heap::Heap heap;
  Tree::Tree tree;
  map<char, string> codewords;

  /* READ BY BLOCK */
  Heap::GenerateHeapFromFile("./Data/harry_fullchapter.txt", buffer, heap);
  Tree::GenerateHuffmanTree(heap, tree);
  Huffman::GenerateBytecodes(tree.root, codewords, 0);

  /* Display the generated Bytecode for each Characters (Debug)*/
  cout << "\nBYTECODE:\n";
  for (std::map<char, string>::const_iterator it = codewords.begin();
       it != codewords.end(); it++) {
    std::cout << it->first << ":" << it->second << "\n";
  }

  Huffman::EncodeStringToFile("./Data/harry_fullchapter_encoded.bin", buffer,
                              codewords);
  encoded = IO::ReadFile("./Data/harry_fullchapter_encoded.bin", "rb");
  Huffman::DecodeStringToFile("./Data/harry_fullchapter_decoded.txt", encoded,
                              tree.root);
  return 0;
}
