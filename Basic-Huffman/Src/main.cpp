#include "DataTransfer.h"
#include "HuffmanCoding.h"
#include "Tree.h"

/*
-TREE IN FILE
-JPG
 */

using namespace std;

int main() {
  std::string buffer;
  std::string encoded, decoded;
  Heap heap;
  Tree tree;
  map<char, string> codewords;

  /* READ BY BLOCK */
  GenerateHeapFromFile("./Data/harry_fullchapter.txt", buffer,  heap);
  GenerateHuffmanTree(heap, tree);
  GenerateBytecodes(tree.root, codewords, 0);
  
  /* Display the generated Bytecode for each Characters (Debug)*/
  cout << "\nBYTECODE:\n";
  for (std::map<char, string>::const_iterator it = codewords.begin();
       it != codewords.end(); it++) {
    std::cout << it->first << ":" << it->second << "\n";
  }

  EncodeStringToFile("./Data/harry_fullchapter_encoded.bin", buffer, codewords);
  encoded = ReadFile("./Data/harry_fullchapter_encoded.bin", "rb");
  DecodeStringToFile("./Data/harry__fullchapter_decoded.txt", encoded,
                     tree.root);
  return 0;
}
